kraken:
    distribution: openshift                                # Distribution can be kubernetes or openshift
    kubeconfig_path: $KRKN_KUBE_CONFIG                   # Path to kubeconfig
    exit_on_failure: False                                 # Exit when a post action scenario fails
    litmus_install: $LITMUS_INSTALL                        # Skips install if set to False assuming it's already setup
    litmus_version: $LITMUS_VERSION                        # Litmus version to install
    signal_address: $SIGNAL_ADDRESS                               # Signal listening address
    port: $PORT
    publish_kraken_status: $PUBLISH_KRAKEN_STATUS
    litmus_uninstall: False                                # If you want to uninstall litmus if failure
    litmus_uninstall_before_run: $LITMUS_UNINSTALL_BEFORE_RUN # If you want to uninstall litmus before a new run starts
    signal_state: $SIGNAL_STATE                            # Will wait for the RUN signal when set to PAUSE before running the scenarios
    chaos_scenarios:                                       # List of policies/chaos scenarios to load
        - $SCENARIO_TYPE:                                  # List of chaos time scenarios to load
            - $SCENARIO_FILE
              $SCENARIO_POST_ACTION
cerberus:
    cerberus_enabled: $CERBERUS_ENABLED                    # Enable it when cerberus is previously installed
    cerberus_url: $CERBERUS_URL                            # When cerberus_enabled is set to True, provide the url where cerberus publishes go/no-go signal
    check_applicaton_routes: False                         # When enabled will look for application unavailability using the routes specified in the cerberus config and fails the run

performance_monitoring:
    deploy_dashboards: $DEPLOY_DASHBOARDS                 # Install a mutable grafana and load the performance dashboards. Enable this only when running on OpenShift
    repo: "https://github.com/cloud-bulldozer/performance-dashboards.git"
    kube_burner_binary_url: "https://github.com/cloud-bulldozer/kube-burner/releases/download/v0.9.1/kube-burner-0.9.1-Linux-x86_64.tar.gz"
    capture_metrics: $CAPTURE_METRICS
    config_path: config/kube_burner.yaml                  # Define the Elasticsearch url and index name in this config
    metrics_profile_path: config/metrics-aggregated.yaml
    prometheus_url:                                       # The prometheus url/route is automatically obtained in case of OpenShift, please set it when the distribution is Kubernetes.
    prometheus_bearer_token:                              # The bearer token is automatically obtained in case of OpenShift, please set it when the distribution is Kubernetes. This is needed to authenticate with prometheus.
    uuid:                                                 # uuid for the run is generated by default if not set
    enable_alerts: $ENABLE_ALERTS                         # Runs the queries specified in the alert profile and displays the info or exits 1 when severity=error
    alert_profile: $ALERTS_PATH                           # Path to alert profile with the prometheus queries

tunings:
    wait_duration: $WAIT_DURATION                          # Duration to wait between each chaos scenario
    iterations: $ITERATIONS                                # Number of times to execute the scenarios
    daemon_mode: $DAEMON_MODE                              # Iterations are set to infinity which means that the kraken will cause chaos forever
